<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local ="clr-namespace:LiangGeRen"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="LiangGeRen.MainWindow"
        Title="MainWindow" Width="292" SizeToContent="Height"
        WindowStyle="None" AllowsTransparency="True" MouseLeftButtonDown="DragWindow"
        >
    <Window.Resources>
        <sys:String x:Key="ErroData">NoError</sys:String>
        <local:VisibiltyConverter x:Key="VisiblityConverter" />
        <local:LengthConverter x:Key="lenConverter"/>
        <Style TargetType="{x:Type ComboBox}" x:Key="customerComboBox">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentPresenter Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{Binding HorizontalContentAlignment}" SnapsToDevicePixels="{Binding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment}">
                            <ContentPresenter.Content>
                                <Grid VerticalAlignment="Top" HorizontalAlignment="Left">

                                    <Label x:Name="label" Content="{Binding}" Width="179"/>
                                    <Button x:Name="innerBtn" HorizontalAlignment="Right" 
        								Width="15" Height="15" 
        								Visibility="Hidden" Click="innerBtn_Click" Tag="{Binding Content, ElementName=label}">

                                        <Button.Template>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border>
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                        <Canvas x:Name="canvas1" 
        									HorizontalAlignment="Left" 
        									Height="{Binding Height, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
        									Width="{Binding Width, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
        									VerticalAlignment="Top">
                                            <Line x:Name="line1" X1="0" Y1="0" 
        										X2="{Binding Height, Converter={StaticResource lenConverter}, RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}" 
        										Y2="{Binding Height, Converter={StaticResource lenConverter}, ElementName=canvas1}" 
        										StrokeThickness="2" Stroke="White"/>
                                            <Line x:Name="line2" X1="0" Y1="{Binding Height, Converter={StaticResource lenConverter}, RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"
        										X2="{Binding Height, Converter={StaticResource lenConverter}, ElementName=canvas1}" Y2="0"
        										StrokeThickness="2" 
        										Stroke="White"/>
                                        </Canvas>
                                    </Button>
                                </Grid>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                        <DataTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="innerBtn"/>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Canvas}" x:Key="runningTrigger">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEnabled, ElementName=loginBtn}" Value="False">
                    <Setter Property="Background" Value="Blue"></Setter>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="Moving">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:3" Storyboard.TargetProperty="Left" From="0" 
                                                 To="325" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="Moving"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style x:Key="LoginButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="btnBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"  SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Opacity" Value="0.5"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Opacity" Value="1"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="StackPanel" x:Key="erroDataMoving">
            <Style.Triggers>
                <Trigger Property="Visibility" Value="Visible">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:.3" Storyboard.TargetProperty="Height" From="0" 
                                                 To="26">

                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="120"/>
            <RowDefinition Height="107"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" Background="#5DC3E1">
            <DockPanel.Effect>
                <DropShadowEffect Opacity="0.5" BlurRadius="3" Direction="330" ShadowDepth="4"/>
            </DockPanel.Effect>
        </DockPanel>
        <Canvas Grid.Row="1">
            <ComboBox x:Name="userName" Text="邮箱" Foreground="Gray"  
				Height="23" Canvas.Left="59" Canvas.Top="21" Width="179" IsEditable="True" 
				Style="{StaticResource customerComboBox}"
				GotFocus="userName_GotFocus" LostFocus="userName_LostFocus" />
            <PasswordBox x:Name="passWord" Password="" 
                         Height="24" Canvas.Left="59" Canvas.Top="64" Width="179" KeyDown="passWord_KeyDown"/>
            <Canvas Height="1" Width="292" Canvas.Top="106" Background="#5DC3E1">
                <Canvas 
					Height="{Binding Height, RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"
					Width="40"
					Background="Black"
					Style="{StaticResource runningTrigger}"
                    />
            </Canvas>
        </Canvas>
        <DockPanel Grid.Row="2" Margin="0,5" >
            <Button x:Name="loginBtn" Background="#1DC3E1" Content="登录" HorizontalAlignment="Center" Width="147" Height="35" Click="OnClick" Style="{DynamicResource LoginButtonStyle}" Foreground="White" FontSize="22" FontFamily="STHupo" />
        </DockPanel>
        <StackPanel x:Name="errorDataPanel" Grid.Row="3" Visibility="Collapsed" Style="{StaticResource erroDataMoving}">
        <Label x:Name="errorData" Content="邮箱格式错误！" HorizontalAlignment="Left" Margin="10,0,0,0"  VerticalAlignment="Top"/>
        </StackPanel>
    </Grid>
</Window>
